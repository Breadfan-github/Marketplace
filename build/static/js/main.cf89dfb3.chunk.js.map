{"version":3,"sources":["components/Navbar.js","components/Main.js","components/App.js","serviceWorker.js","index.js"],"names":["Navbar","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","href","target","rel","id","props","account","Component","Main","_this","onSubmit","event","preventDefault","name","productName","price","window","web3","utils","toWei","productPrice","toString","createProduct","type","ref","input","placeholder","required","scope","products","map","product","fromWei","owner","purchased","onClick","purchaseProduct","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","App","productCount","loading","bind","assertThisInitialized","_componentWillMount","asyncToGenerator","_callee","_context","loadWeb3","loadBlockchainData","_loadWeb","_callee2","_context2","ethereum","Web3","enable","currentProvider","alert","_loadBlockchainData","_callee3","accounts","marketplace","_context3","eth","getAccounts","setState","Contract","Marketplace","abi","methods","concat","toConsumableArray","_this2","send","from","once","receipt","_this3","components_Navbar","role","components_Main","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf89dfb3.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nclass Navbar extends Component {\n\n  \n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            href=\"http://www.dappuniversity.com/bootcamp\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Test Blockchain Marketplace \n          </a>\n           <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-white\"><span id=\"account\">{this.props.account}</span></small>\n          </li>\n         </ul>\n        </nav>\n    );\n  }\n\n}\n//notice relationship between line 20 this.props.account and this.state.account at pasted in Navbar app.js\n\n\nexport default Navbar;\n","import React, { Component } from 'react';\n\n\nclass Main extends Component {\n\n  // form onSubmit makes something happen directly on submitting forms \n  // ref(s) in productName and productPrice are the values received from input\n  // access the refs in the form const name/price = xxxx.val (MUST USE VALUE COZ ITS A FORM Field)\n  render() {\n    return (\n      <div id=\"content\">\n       <h1>Add Product</h1>\n\n       <form onSubmit={(event) => {\n          event.preventDefault()\n          const name = this.productName.value\n          const price = window.web3.utils.toWei(this.productPrice.value.toString(), 'Ether')\n          this.props.createProduct(name, price)\n        }}> \n\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"productName\"\n              type=\"text\"\n              ref={(input) => { this.productName = input }}\n              className=\"form-control\"\n              placeholder=\"Product Name\"\n              required />\n          </div>\n\n          <div className=\"form-group mr-sm-2\">\n            <input\n              id=\"productPrice\"\n              type=\"text\"\n              ref={(input) => { this.productPrice = input }}\n              className=\"form-control\"\n              placeholder=\"Product Price\"\n              required />\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-primary\">Add Product</button>\n        </form>\n        <p>&nbsp;</p>\n        <h2>Buy Product</h2>\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Price</th>\n              <th scope=\"col\">Owner</th>\n              <th scope=\"col\"></th>\n            </tr>\n          </thead>\n          <tbody id=\"productList\">\n            { this.props.products.map((product, key) => {\n              \n              return(               \n              <tr key = {key}>\n              <th scope=\"row\">{product.id.toString()}</th>\n              <td>{product.name}</td>\n              <td>{window.web3.utils.fromWei(product.price.toString(), 'Ether')} Eth</td>\n              <td>{product.owner}</td>\n              <td> {!product.purchased\n                ? <button\n                     name={product.id}\n                     value={product.price}\n                     onClick={(event) => {\n                      this.props.purchaseProduct(event.target.name, event.target.value)\n                  }}>\n                    Buy \n                  </button>\n                : null\n              }\n                </td>\n            </tr>\n            )\n\n            })}\n            \n          \n          </tbody>\n        </table>\n      </div>\n\n    );\n  }\n\n}\n\n\nexport default Main;\n","import React, { Component } from 'react';\nimport Web3 from 'web3'\nimport './App.css';\nimport Marketplace from '../abis/Marketplace.json'\nimport Navbar from './Navbar'\nimport Main from './Main'\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    //load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n      const marketplace = web3.eth.Contract(Marketplace.abi, \"0xA5cFD7B54D284A87c3Fe720806871E0D5Bc999af\")\n      this.setState({ marketplace: marketplace })\n      //or in javascript we can shortcut this to ({marketplace})\n      const productCount = await marketplace.methods.productCount().call()\n      //.call() for read data .send() to send transactions/ write data in [createProduct]function\n      this.setState({ productCount })\n      //fetch products from blockchain\n      for (var i = 1; i <= productCount; i++) {\n        const product = await marketplace.methods.products(i).call()\n        this.setState ({\n          products: [...this.state.products, product]\n          //adding products 1 by 1 after existing products\n        })\n      }\n      this.setState({ loading: false })\n    \n  }\n\n  constructor(props){\n    super(props)\n    this.state = {\n      account:'',\n      productCount:0,\n      products: [],\n      //hint: products array used to fetch products from blockchain\n      loading: true\n    }\n    this.createProduct = this.createProduct.bind(this)\n    this.purchaseProduct = this.purchaseProduct.bind(this)\n    //CRITICAL, DO NOT FORGET TO BIND in constructor, \n    //if not React dunno createProduct in the function = createProduct in the form/html code\n  }\n  \n  \n\n  createProduct(name, price){\n    this.setState({ loading: true })\n    this.state.marketplace.methods.createProduct(name, price).send({from: this.state.account})\n    .once('receipt', (receipt) => { this.setState ({loading: false}) \n     })\n    //^^this reads the 'marketplace' const deployed smart contract in the if statement\n    //.methods exposes the function on the smart contract to make createProduct()assessible here\n  }\n\n  purchaseProduct(id, price){\n    this.setState({ loading: true })\n    this.state.marketplace.methods.purchaseProduct(id).send({from: this.state.account, value: price})\n    .once('receipt', (receipt) => { this.setState ({loading: false}) \n     })\n    \n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex\">\n              { this.state.loading\n                ? <div id=\"loader\" className=\"text-center\"><p className=\"text-center\">Loading...</p></div>\n                : <Main \n                products={this.state.products}\n                createProduct={this.createProduct}\n                purchaseProduct={this.purchaseProduct} />\n                //ternary operator, if loading then ?: show loader\n                //createProduct ={this.createProduct} is to call createProduct function in the selling form\n              }\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}